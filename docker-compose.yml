---
name: "networkautomaniac-telemetry"

services:
  telegraf:
    image: "telegraf:latest"
    container_name: "telegraf"
    hostname: "telegraf"
    environment:
      - "SNMP_COMMUNITY_STRING=${SNMP_COMMUNITY_STRING}"
      - "PROMETHEUS_URL=${PROMETHEUS_URL}"
    user: "telegraf:${DOCKER_GROUP_ID}"
    command: "telegraf --config /etc/telegraf/telegraf.conf --watch-config poll"
    volumes:
      - "./configs/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf"
      - "/var/run/docker.sock:/var/run/docker.sock"
    restart: "unless-stopped"

  prometheus:
    image: "prom/prometheus:latest"
    container_name: "prometheus"
    hostname: "prometheus"
    ports:
      - "9090:9090"
    command:
      - "--web.enable-remote-write-receiver"
    volumes:
      - "./configs/prometheus/prometheus.yml:/prometheus/prometheus.yml"
      - "prometheus-data:/prometheus"
    depends_on:
      - "telegraf"
    restart: "unless-stopped"

  grafana:
    image: "grafana/grafana:10.1.2"
    container_name: "grafana"
    hostname: "grafana"
    ports:
      - "3000:3000"
    environment:
      - "PROMETHEUS_URL=${PROMETHEUS_URL}"
      - "LOKI_URL=${LOKI_URL}"
    volumes:
      - "./configs/grafana/grafana.ini:/etc/grafana/grafana.ini"
      - "./configs/grafana/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml"
      - "grafana-data:/var/lib/grafana"
    depends_on:
      - "prometheus"
    restart: "unless-stopped"

  vector:
    image: "timberio/vector:latest-debian"
    container_name: "vector"
    hostname: "vector"
    ports:
      - "8686:8686"
      - "514:514/udp"
    environment:
      - "LOKI_URL=${LOKI_URL}"
      - "TZ=${TZ}"
    volumes:
      - "./configs/vector/vector.yaml:/etc/vector/vector.yaml"
    depends_on:
      - "loki"
    restart: "unless-stopped"

  loki:
    image: "grafana/loki:latest"
    container_name: "loki"
    hostname: "loki"
    ports:
      - "3100:3100"
    environment:
      - "TZ=${TZ}"
    volumes:
      - "./configs/loki/local-config.yaml:/etc/loki/local-config.yaml"
      - "loki-data:/loki/data"
    restart: "unless-stopped"

volumes:
  prometheus-data:
  grafana-data:
  loki-data:
